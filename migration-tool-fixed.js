const fs = require('fs');

console.log('üîÑ „Éá„Éº„ÇøÁßªË°å„ÉÑ„Éº„É´Ôºà‰øÆÊ≠£ÁâàÔºâ: Êó¢Â≠ò„Éá„Éº„Çø„ÇíÊñ∞„Åó„ÅÑÁµ±‰∏ÄÂûã„Å´Â§âÊèõ‰∏≠...\n');

// Êó¢Â≠ò„Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø
const geoContent = fs.readFileSync('./src/data/geography-enhanced.ts', 'utf-8');
const histContent = fs.readFileSync('./src/data/history.ts', 'utf-8');
const civContent = fs.readFileSync('./src/data/civics.ts', 'utf-8');

// Êñ∞„Åó„ÅÑ„Ç´„ÉÜ„Ç¥„É™„Éû„ÉÉ„Éî„É≥„Ç∞ÂÆöÁæ©
const CATEGORY_MAPPING = {
  geography: {
    'industry': { category: 'human', subcategory: 'industry' },
    'regions': { category: 'regional', subcategory: 'regions' },
    'prefecture': { category: 'regional', subcategory: 'prefectures' },
    'climate': { category: 'physical', subcategory: 'climate' },
    'landforms': { category: 'physical', subcategory: 'landforms' },
    'agriculture': { category: 'human', subcategory: 'agriculture' }
  },
  history: {
    'ancient': { category: 'ancient', subcategory: 'heian' },
    'medieval': { category: 'medieval', subcategory: 'kamakura' },
    'early-modern': { category: 'early-modern', subcategory: 'edo' },
    'modern': { category: 'modern', subcategory: 'meiji' },
    'contemporary': { category: 'contemporary', subcategory: 'showa-postwar' },
    'primitive': { category: 'ancient', subcategory: 'jomon' },
    'general': { category: 'modern', subcategory: 'meiji' }
  },
  civics: {
    'constitution': { category: 'constitution', subcategory: 'basic-principles' },
    'politics': { category: 'politics', subcategory: 'three-powers' },
    'human-rights': { category: 'constitution', subcategory: 'human-rights' },
    'economics': { category: 'economics', subcategory: 'market-economy' },
    'general': { category: 'politics', subcategory: 'three-powers' }
  }
};

// Áí∞Â¢ÉÂïèÈ°å„ÇíÂÖ¨Ê∞ë„Å´ÁßªÂãï„Åô„Çã„Éû„ÉÉ„Éî„É≥„Ç∞
const ENVIRONMENT_MAPPING = {
  '„Éï„Éº„Éâ„Éû„Ç§„É¨„Éº„Ç∏': { subject: 'civics', category: 'environment', subcategory: 'sustainability' }
};

// Èõ£ÊòìÂ∫¶„Éû„ÉÉ„Éî„É≥„Ç∞
const DIFFICULTY_MAPPING = {
  'easy': 'basic',
  'medium': 'standard', 
  'hard': 'advanced'
};

// Âπ¥‰ª£ÊÉÖÂ†±„Éû„ÉÉ„Éî„É≥„Ç∞ÔºàÊ≠¥Âè≤ÂïèÈ°åÁî®Ôºâ
const ERA_INFO = {
  'jomon': { start: -14000, end: -300, label: 'Á¥ÄÂÖÉÂâç14000-300Âπ¥È†É', description: 'Á∏ÑÊñáÊôÇ‰ª£ÔºöÁã©ÁåüÊé°ÈõÜ„ÄÅÂúüÂô®Ë£Ω‰Ωú' },
  'yayoi': { start: -300, end: 300, label: 'Á¥ÄÂÖÉÂâç300-300Âπ¥È†É', description: 'Âº•ÁîüÊôÇ‰ª£ÔºöÁ®≤‰ΩúÈñãÂßã„ÄÅÈáëÂ±ûÂô®' },
  'kofun': { start: 300, end: 710, label: '300-710Âπ¥', description: 'Âè§Â¢≥ÊôÇ‰ª£ÔºöÂ§ßÂíåÊîøÊ®©„ÄÅÂâçÊñπÂæåÂÜÜÂ¢≥' },
  'nara': { start: 710, end: 794, label: '710-794Âπ¥', description: 'Â•àËâØÊôÇ‰ª£ÔºöÂæã‰ª§ÊîøÊ≤ª„ÄÅÂ§ß‰ªèÂª∫Á´ã' },
  'heian': { start: 794, end: 1185, label: '794-1185Âπ¥', description: 'Âπ≥ÂÆâÊôÇ‰ª£ÔºöÊëÇÈñ¢ÊîøÊ≤ª„ÄÅÂõΩÈ¢®ÊñáÂåñ' },
  'kamakura': { start: 1185, end: 1333, label: '1185-1333Âπ¥', description: 'ÈéåÂÄâÊôÇ‰ª£ÔºöÊ≠¶ÂÆ∂ÊîøÊ®©„ÄÅÂÖÉÂØá' },
  'muromachi': { start: 1336, end: 1573, label: '1336-1573Âπ¥', description: 'ÂÆ§Áî∫ÊôÇ‰ª£Ôºö‰∏ãÂÖã‰∏ä„ÄÅÂøú‰ªÅ„ÅÆ‰π±' },
  'azuchi-momoyama': { start: 1573, end: 1603, label: '1573-1603Âπ¥', description: 'ÂÆâÂúüÊ°ÉÂ±±ÊôÇ‰ª£ÔºöÂ§©‰∏ãÁµ±‰∏Ä' },
  'edo': { start: 1603, end: 1867, label: '1603-1867Âπ¥', description: 'Ê±üÊà∏ÊôÇ‰ª£ÔºöÈéñÂõΩ„ÄÅÂèÇÂã§‰∫§‰ª£' },
  'meiji': { start: 1868, end: 1912, label: '1868-1912Âπ¥', description: 'ÊòéÊ≤ªÊôÇ‰ª£ÔºöÊñáÊòéÈñãÂåñ„ÄÅËøë‰ª£Âåñ' },
  'taisho': { start: 1912, end: 1926, label: '1912-1926Âπ¥', description: 'Â§ßÊ≠£ÊôÇ‰ª£ÔºöÂ§ßÊ≠£„Éá„É¢„ÇØ„É©„Ç∑„Éº' },
  'showa-prewar': { start: 1926, end: 1945, label: '1926-1945Âπ¥', description: 'Êò≠ÂíåÂâçÊúüÔºöÊà¶‰∫â„ÅÆÊôÇ‰ª£' },
  'showa-postwar': { start: 1945, end: 1989, label: '1945-1989Âπ¥', description: 'Êà¶ÂæåÂæ©Ëàà„ÄÅÈ´òÂ∫¶ÁµåÊ∏àÊàêÈï∑' }
};

// ÊîπËâØ„Åï„Çå„ÅüÂïèÈ°åÊäΩÂá∫Èñ¢Êï∞
function extractQuestionsImproved(content, subject) {
  const questions = [];
  
  // „Çà„ÇäÊüîËªü„Å™ÊäΩÂá∫„Éë„Çø„Éº„É≥
  const patterns = [
    // „Éë„Çø„Éº„É≥1: Ê®ôÊ∫ñÂΩ¢Âºè
    /\{\s*id:\s*(\d+),\s*question:\s*['"`]([^'"`]*?)['"`],\s*options:\s*\[([^\]]*?)\],\s*correct:\s*(\d+),[\s\S]*?explanation:\s*['"`]([^'"`]*?)['"`][\s\S]*?category:\s*['"`]([^'"`]*?)['"`],[\s\S]*?difficulty:\s*['"`]([^'"`]*?)['"`][\s\S]*?\}/g,
    
    // „Éë„Çø„Éº„É≥2: „Éó„É≠„Éë„ÉÜ„Ç£È†ÜÂ∫è„ÅåÈÅï„ÅÜÂ†¥Âêà
    /\{\s*id:\s*(\d+)[\s\S]*?question:\s*['"`]([^'"`]*?)['"`][\s\S]*?options:\s*\[([^\]]*?)\][\s\S]*?correct:\s*(\d+)[\s\S]*?category:\s*['"`]([^'"`]*?)['"`][\s\S]*?difficulty:\s*['"`]([^'"`]*?)['"`][\s\S]*?explanation:\s*['"`]([^'"`]*?)['"`][\s\S]*?\}/g
  ];
  
  for (const pattern of patterns) {
    let match;
    while ((match = pattern.exec(content)) !== null) {
      let [, id, question, optionsText, correct, explanation, category, difficulty] = match;
      
      // „Éë„Çø„Éº„É≥2„ÅÆÂ†¥Âêà„ÄÅÈ†ÜÂ∫è„ÇíË™øÊï¥
      if (match.length === 9) {
        [, id, question, optionsText, correct, category, difficulty, explanation] = match;
      }
      
      // „Ç™„Éó„Ç∑„Éß„É≥„ÇíËß£Êûê
      const optionMatches = [...optionsText.matchAll(/['"`]([^'"`]*?)['"`]/g)];
      const options = optionMatches.map(m => m[1]);
      
      if (options.length >= 3) {  // ÊúÄ‰Ωé3„Å§„ÅÆÈÅ∏ÊäûËÇ¢„Åå„ÅÇ„Çå„Å∞ÊúâÂäπ
        questions.push({
          originalId: parseInt(id),
          question: question.trim(),
          options,
          correct: parseInt(correct),
          explanation: explanation.trim(),
          originalCategory: category,
          originalDifficulty: difficulty,
          subject
        });
      }
    }
  }
  
  // ÈáçË§áÈô§ÂéªÔºàID„Éô„Éº„ÇπÔºâ
  const uniqueQuestions = [];
  const seenIds = new Set();
  questions.forEach(q => {
    if (!seenIds.has(q.originalId)) {
      seenIds.add(q.originalId);
      uniqueQuestions.push(q);
    }
  });
  
  return uniqueQuestions;
}

// Áí∞Â¢ÉÂïèÈ°å„ÅÆÂà§ÂÆö
function isEnvironmentQuestion(question, explanation) {
  const envKeywords = ['„Éï„Éº„Éâ„Éû„Ç§„É¨„Éº„Ç∏', 'Áí∞Â¢É', 'Âú∞ÁêÉÊ∏©ÊöñÂåñ', 'co2', 'ÊåÅÁ∂öÂèØËÉΩ', '„É™„Çµ„Ç§„ÇØ„É´', 'ÂÜçÁîüÂèØËÉΩ', '„Ç®„Éç„É´„ÇÆ„Éº'];
  const text = (question + ' ' + explanation).toLowerCase();
  return envKeywords.some(keyword => text.includes(keyword));
}

// Êñ∞„Åó„ÅÑID„ÇíÁîüÊàê
function generateNewId(subject, category, index) {
  const subjectCode = subject.toUpperCase().slice(0, 3);
  const categoryCode = category.toUpperCase().slice(0, 3);
  const numberCode = (index + 1).toString().padStart(3, '0');
  return `${subjectCode}_${categoryCode}_${numberCode}`;
}

// „Çø„Ç∞ÁîüÊàêÔºàÂïèÈ°åÂÜÖÂÆπ„Åã„ÇâÊé®Ê∏¨Ôºâ
function generateTags(question, explanation, subject, category, subcategory) {
  const tags = [subject, category];
  
  if (subcategory) tags.push(subcategory);
  
  const text = (question + ' ' + explanation).toLowerCase();
  
  // ÂÖ±ÈÄö„Ç≠„Éº„ÉØ„Éº„Éâ„Éô„Éº„Çπ„ÅÆ„Çø„Ç∞
  const tagKeywords = {
    'environment': ['Áí∞Â¢É', 'Âú∞ÁêÉÊ∏©ÊöñÂåñ', 'co2', 'ÊåÅÁ∂öÂèØËÉΩ', '„Éï„Éº„Éâ„Éû„Ç§„É¨„Éº„Ç∏'],
    'economy': ['ÁµåÊ∏à', 'Ë≤øÊòì', 'Ëº∏Âá∫', 'Ëº∏ÂÖ•', 'Áî£Ê•≠'],
    'culture': ['ÊñáÂåñ', 'Ëä∏Ë°ì', 'ÊñáÂ≠¶', 'ÂÆóÊïô', 'Á•≠„Çä'],
    'politics': ['ÊîøÊ≤ª', 'ÊîøÂ∫ú', 'ÈÅ∏Êåô', 'Ê≥ïÂæã', 'Âà∂Â∫¶'],
    'war': ['Êà¶‰∫â', 'Ëªç‰∫ã', 'Êà¶„ÅÑ', 'ÂêàÊà¶', '‰æµÊîª'],
    'technology': ['ÊäÄË°ì', 'Áô∫Êòé', 'ÁßëÂ≠¶', 'Â∑•Ê•≠', 'Ê©üÊ¢∞']
  };
  
  Object.entries(tagKeywords).forEach(([tag, keywords]) => {
    if (keywords.some(keyword => text.includes(keyword))) {
      tags.push(tag);
    }
  });
  
  return [...new Set(tags)]; // ÈáçË§áÈô§Âéª
}

// „Éá„Éº„ÇøÂ§âÊèõÂÆüË°å
console.log('üìä Êó¢Â≠ò„Éá„Éº„ÇøÊäΩÂá∫‰∏≠ÔºàÊîπËâØÁâàÔºâ...');

const geoQuestions = extractQuestionsImproved(geoContent, 'geography');
const histQuestions = extractQuestionsImproved(histContent, 'history');  
const civQuestions = extractQuestionsImproved(civContent, 'civics');

console.log(`‚úÖ ÊäΩÂá∫ÂÆå‰∫Ü:`);
console.log(`   Âú∞ÁêÜ: ${geoQuestions.length}Âïè`);
console.log(`   Ê≠¥Âè≤: ${histQuestions.length}Âïè`);  
console.log(`   ÂÖ¨Ê∞ë: ${civQuestions.length}Âïè`);
console.log(`   ÂêàË®à: ${geoQuestions.length + histQuestions.length + civQuestions.length}Âïè`);

// Áµ±‰∏Ä„Éá„Éº„ÇøÊßãÈÄ†„Å´Â§âÊèõ
console.log('\nüîÑ Êñ∞„Åó„ÅÑÁµ±‰∏ÄÂΩ¢Âºè„Å´Â§âÊèõ‰∏≠...');

const unifiedQuestions = [];
let idCounters = {
  'geography-physical': 0,
  'geography-human': 0,
  'geography-regional': 0,
  'history-ancient': 0,
  'history-medieval': 0,
  'history-early-modern': 0,
  'history-modern': 0,
  'history-contemporary': 0,
  'civics-constitution': 0,
  'civics-politics': 0,
  'civics-economics': 0,
  'civics-environment': 0
};

// ÂêÑÁßëÁõÆ„ÅÆ„Éá„Éº„Çø„ÇíÂ§âÊèõ
[
  { questions: geoQuestions, subject: 'geography' },
  { questions: histQuestions, subject: 'history' },
  { questions: civQuestions, subject: 'civics' }
].forEach(({ questions, subject }) => {
  
  questions.forEach((q) => {
    // Áí∞Â¢ÉÂïèÈ°å„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ
    let finalSubject = subject;
    let mapping = CATEGORY_MAPPING[subject][q.originalCategory];
    
    if (isEnvironmentQuestion(q.question, q.explanation)) {
      finalSubject = 'civics';
      mapping = { category: 'environment', subcategory: 'sustainability' };
    }
    
    if (!mapping) {
      console.warn(`‚ö†Ô∏è  Unknown category: ${q.originalCategory} in ${subject}`);
      return;
    }
    
    const counterKey = `${finalSubject}-${mapping.category}`;
    const newId = generateNewId(finalSubject, mapping.category, idCounters[counterKey]);
    idCounters[counterKey]++;
    
    const tags = generateTags(q.question, q.explanation, finalSubject, mapping.category, mapping.subcategory);
    
    const unifiedQuestion = {
      id: newId,
      subject: finalSubject,
      category: mapping.category,
      subcategory: mapping.subcategory,
      grade: 6, // „Éá„Éï„Ç©„É´„Éà6Âπ¥Áîü
      difficulty: DIFFICULTY_MAPPING[q.originalDifficulty] || 'standard',
      tags: tags,
      question: q.question,
      options: q.options,
      correct: q.correct,
      explanation: q.explanation,
      type: 'multiple-choice',
      lastUpdated: new Date(),
      createdAt: new Date(),
      version: 1,
      qualityScore: q.explanation.length >= 100 ? 8 : 6,
      // Ê≠¥Âè≤ÂïèÈ°å„ÅÆeraÊÉÖÂ†±ËøΩÂä†
      ...(finalSubject === 'history' && mapping.subcategory && ERA_INFO[mapping.subcategory] && {
        era: ERA_INFO[mapping.subcategory]
      })
    };
    
    unifiedQuestions.push(unifiedQuestion);
  });
});

console.log(`‚úÖ Â§âÊèõÂÆå‰∫Ü: ${unifiedQuestions.length}Âïè`);

// Áµ±Ë®àÊÉÖÂ†±Ë°®Á§∫
console.log('\nüìà Â§âÊèõÂæå„ÅÆÂàÜÈ°ûÁµ±Ë®à:');
const stats = {};
unifiedQuestions.forEach(q => {
  const key = `${q.subject}-${q.category}`;
  stats[key] = (stats[key] || 0) + 1;
});

Object.entries(stats).sort().forEach(([key, count]) => {
  console.log(`   ${key}: ${count}Âïè`);
});

// Áí∞Â¢ÉÂïèÈ°å„ÅÆÁßªÂãïÁµ±Ë®à
const environmentQuestions = unifiedQuestions.filter(q => q.category === 'environment');
console.log(`\nüå± Áí∞Â¢ÉÂïèÈ°å„ÅÆÁßªÂãï: ${environmentQuestions.length}Âïè„ÇíÂÖ¨Ê∞ë„Å´ÁßªÂãï`);

// Êñ∞„Åó„ÅÑÁµ±‰∏Ä„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê
const outputContent = `// Unified Questions Database for ShakaQuest
// Áµ±‰∏ÄÂïèÈ°å„Éá„Éº„Çø„Éô„Éº„Çπ - Ëá™ÂãïÁîüÊàê„Éï„Ç°„Ç§„É´  
// Generated: ${new Date().toISOString()}
// Total Questions: ${unifiedQuestions.length}

import { UnifiedQuestion } from './unified-types';

export const unifiedQuestions: UnifiedQuestion[] = ${JSON.stringify(unifiedQuestions, (key, value) => {
  if (value instanceof Date) {
    return \`new Date('\${value.toISOString()}')\`;
  }
  return value;
}, 2).replace(/"new Date\\('([^']+)'\\)"/g, 'new Date(\'$1\')')};

// ÁßëÁõÆÂà•ÂïèÈ°åÂèñÂæó
export const getQuestionsBySubject = (subject: string) => 
  unifiedQuestions.filter(q => q.subject === subject);

// „Ç´„ÉÜ„Ç¥„É™Âà•ÂïèÈ°åÂèñÂæó  
export const getQuestionsByCategory = (subject: string, category: string) =>
  unifiedQuestions.filter(q => q.subject === subject && q.category === category);

// „Çø„Ç∞Ê§úÁ¥¢
export const getQuestionsByTag = (tag: string) =>
  unifiedQuestions.filter(q => q.tags.includes(tag));

// Ê®™Êñ≠Ê§úÁ¥¢ÔºàÁí∞Â¢ÉÂïèÈ°å„Å™„Å©Ôºâ
export const searchQuestions = (keyword: string) =>
  unifiedQuestions.filter(q => 
    q.question.includes(keyword) || 
    q.explanation.includes(keyword) || 
    q.tags.some(tag => tag.includes(keyword))
  );

// ÂìÅË≥™„Åß„Éï„Ç£„É´„Çø
export const getHighQualityQuestions = (minScore: number = 7) =>
  unifiedQuestions.filter(q => q.qualityScore >= minScore);

export default unifiedQuestions;
`;

// ÁµêÊûú„Çí„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
fs.writeFileSync('./src/data/questions-unified.ts', outputContent);

console.log('\nüéâ ÁßªË°åÂÆå‰∫ÜÔºÅ');
console.log('üìÅ Âá∫Âäõ„Éï„Ç°„Ç§„É´: ./src/data/questions-unified.ts');
console.log(`üìä ÊúÄÁµÇÁµêÊûú: ${unifiedQuestions.length}Âïè„ÇíÁµ±‰∏ÄÂΩ¢Âºè„ÅßÁÆ°ÁêÜ`);
console.log('\n‚ú® Êñ∞„Åó„ÅÑÊ©üËÉΩ:');
console.log('   - Áµ±‰∏ÄID‰ΩìÁ≥ª (GEO_PHY_001, HIS_ANC_045, etc.)');
console.log('   - Ê≠£Á¢∫„Å™Â≠¶Ë°ìÂàÜÈ°û');  
console.log('   - Ê®™Êñ≠Ê§úÁ¥¢ÂèØËÉΩ„Å™„Çø„Ç∞„Ç∑„Çπ„ÉÜ„É†');
console.log('   - ÂìÅË≥™„Çπ„Ç≥„Ç¢‰ªò„Åç');
console.log('   - Áí∞Â¢ÉÂïèÈ°å„ÅÆÈÅ©Âàá„Å™ÂàÜÈ°ûÔºàÂÖ¨Ê∞ëÔºâ');
console.log('   - Ê≠¥Âè≤ÂïèÈ°å„ÅÆÂπ¥‰ª£ÊÉÖÂ†±‰ªò„Åç');
console.log('   - „Éê„Éº„Ç∏„Éß„É≥ÁÆ°ÁêÜÂØæÂøú');